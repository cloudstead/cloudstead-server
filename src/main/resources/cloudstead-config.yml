# Things in {{CURLIES}} will be read from the process environment when the server starts up.

serverName: cloudstead-api

#publicUriBase: https://127.0.0.1
publicUriBase: {{PUBLIC_BASE_URI}}

bcryptRounds: 8
springContextPath: classpath:/{{SPRING_XML_PATH}}

staticAssets:
  baseUri: /
  assetRoot: static/
  localOverride: {{ASSETS_DIR}}
  mustacheCacheEnabled: false
  mustacheResourceRoot: static/
  utilPaths:
    INDEX_PATH: /index.html
    INDEX_ALIASES: /:/index.php
    LOCALIZE: /localize

http:
  port: {{CLOUDSTEAD_SERVER_PORT}}
  baseUri: /api

jersey:
  resourcePackages:
  - cloudos.cloudstead.resources
  - org.cobbzilla.wizard.server
  - org.cobbzilla.wizard.filters
  - org.cobbzilla.wizard.exceptionmappers
  responseFilters: [ org.cobbzilla.wizard.filters.ScrubbableScrubber ]

database:
  driver: org.postgresql.Driver
  url: jdbc:postgresql://localhost:5432/cloudstead
  user: {{DB_USER}}
  password: {{DB_PASS}}

  hibernate:
    entityPackages: [ cloudos.cloudstead.model, cloudos.model.auth ]
    dialect: org.hibernate.dialect.PostgreSQLDialect
    showSql: true
    hbm2ddlAuto: validate
    validationMode: ddl

adminAuthy:
  user: {{ADMIN_AUTHY_KEY}}
  baseUri: {{ADMIN_AUTHY_URI}}

authy:
  user: {{AUTHY_KEY}}
  baseUri: {{AUTHY_URI}}

cloudConfig:
  # the CloudOs java server to unroll and install on new instances
  cloudOsServerTarball: {{CLOUDOS_SERVER_TARBALL}}

  # where configs are stored using cloudos-lib library
  AWSAccessKeyId: {{AWS_ACCESS_KEY_ID}}
  AWSSecretKey: {{AWS_SECRET_ACCESS_KEY}}
  bucket: {{CLOUDOS_S3_BUCKET}}       # the bucket that all hosted cloudstead storage shares
  group: {{AWS_IAM_GROUP}}            # the group that grants per-user permissions to a subdir of the bucket
  dataKey: {{CLOUD_STORAGE_DATA_KEY}} # stored data is encrypted using this secret

  # allows many servers (dev, staging, individual devs, etc) to share a single bucket
  # must be set
  cloudUser: {{CLOUD_STORAGE_USER}}

  # we spin up new hosted cloudstead instances in digitalocean
  doClientId: {{DO_CLIENT_ID}}
  doApiKey: {{DO_API_KEY}}

  # all cloudOs hosts will live within this domain
  domain: {{CLOUDOS_PARENT_DOMAIN}}

  # for now we use a fixed cert (in fact one that is hardcoded to www.cloudstead.io)
  # in the near future we'll use a wildcard cert
  # in the not so distant future, we'll generate a new cert for each cloudos instance
  sslPem: {{SSL_PEM}}
  sslKey: {{SSL_KEY}}

  # this is where the chef stuff lives, we use the deploy.sh script to provision the new instance
  chefSources: {{CLOUDOS_CHEF_SOURCES}}
  chefStagingDir: {{CLOUDOS_CHEF_STAGING_DIR}}

emailTemplateRoot: {{EMAIL_TEMPLATE_ROOT}}

emailSenderNames:
  welcome:
    fromName:  {{WELCOME_SENDER_NAME}}
    fromEmail: {{WELCOME_SENDER_EMAIL}}
  reset_password:
    fromName: {{RESET_PASSWORD_SENDER_NAME}}
    fromEmail: {{RESET_PASSWORD_SENDER_EMAIL}}

smtp:
  host: smtp.sendgrid.net
  port: 587
  user: {{SENDGRID_API_USER}}
  password: {{SENDGRID_API_KEY}}
  tlsEnabled: true

sendGridConfig:
  user: {{SENDGRID_API_USER}}
  password: {{SENDGRID_API_KEY}}

cloudOsDns:
  user: {{CLOUDOS_DNS_USER}}
  password: {{CLOUDOS_DNS_PASSWORD}}
  baseUri: {{CLOUDOS_DNS_BASE_URI}}

appStore:
  user: {{APPSTORE_ADMIN_USER}}
  password: {{APPSTORE_ADMIN_PASSWORD}}
  baseUri: {{APPSTORE_BASE_URI}}